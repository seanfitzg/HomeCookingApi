// <auto-generated />
using System;
using HomeCooking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeCooking.Data.Migrations
{
    [DbContext(typeof(RecipeContext))]
    [Migration("20200828142731_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("HomeCooking.Domain.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FoodType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OtherId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VolumeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WeightId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OtherId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("VolumeId");

                    b.HasIndex("WeightId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("HomeCooking.Domain.Entities.Other", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmountType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Others");
                });

            modelBuilder.Entity("HomeCooking.Domain.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Method")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("HomeCooking.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HomeCooking.Domain.Entities.Volume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Millilitres")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Volumes");
                });

            modelBuilder.Entity("HomeCooking.Domain.Entities.Weight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grams")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("HomeCooking.Domain.Entities.Ingredient", b =>
                {
                    b.HasOne("HomeCooking.Domain.Entities.Other", "Other")
                        .WithMany()
                        .HasForeignKey("OtherId");

                    b.HasOne("HomeCooking.Domain.Entities.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");

                    b.HasOne("HomeCooking.Domain.Entities.Volume", "Volume")
                        .WithMany()
                        .HasForeignKey("VolumeId");

                    b.HasOne("HomeCooking.Domain.Entities.Weight", "Weight")
                        .WithMany()
                        .HasForeignKey("WeightId");
                });

            modelBuilder.Entity("HomeCooking.Domain.Entities.Recipe", b =>
                {
                    b.HasOne("HomeCooking.Domain.Entities.User", null)
                        .WithMany("Recipes")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
